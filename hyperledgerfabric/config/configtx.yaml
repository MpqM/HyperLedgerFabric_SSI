Organizations:
  - &ordererorg
    Name: ordererorg
    ID: ordererorgMSP 
    MSPDir: ../artifact/crypto-config/ordererOrganizations/ordererorg.com/msp 
    Policies:
        Readers:
            Type: Signature
            Rule: "OR('ordererorgMSP.member')"
        Writers:
            Type: Signature
            Rule: "OR('ordererorgMSP.member')"
        Admins:
            Type: Signature
            Rule: "OR('ordererorgMSP.admin')"
    OrdererEndpoints:
         - orderer0.ordererorg.com:7051

  - &org1
    Name: org1
    ID: org1MSP 
    MSPDir: ../artifact/crypto-config/peerOrganizations/org1.com/msp 
    Policies:
        Readers:
            Type: Signature
            Rule: "OR('org1MSP.admin', 'org1MSP.peer', 'org1MSP.client')"
        Writers:
            Type: Signature
            Rule: "OR('org1MSP.admin', 'org1MSP.client')"
        Admins:
            Type: Signature
            Rule: "OR('org1MSP.admin')"
        Endorsement:
            Type: Signature
            Rule: "OR('org1MSP.peer')"
    AnchorPeers:
       - Host: peer0.org1.com
         Port: 8051

  - &org2
    Name: org2
    ID: org2MSP
    MSPDir: ../artifact/crypto-config/peerOrganizations/org2.com/msp 
    Policies:
        Readers:
            Type: Signature
            Rule: "OR('org2MSP.admin', 'org2MSP.peer', 'org2MSP.client')"
        Writers:
            Type: Signature
            Rule: "OR('org2MSP.admin', 'org2MSP.client')"
        Admins:
            Type: Signature
            Rule: "OR('org2MSP.admin')"
        Endorsement:
            Type: Signature
            Rule: "OR('org2MSP.peer')"
    AnchorPeers:
        - Host: peer0.org2.com
          Port: 9051

  - &org3
    Name: org3
    ID: org3MSP
    MSPDir: ../artifact/crypto-config/peerOrganizations/org3.com/msp 
    Policies:
        Readers:
            Type: Signature
            Rule: "OR('org3MSP.admin', 'org3MSP.peer', 'org3MSP.client')"
        Writers:
            Type: Signature
            Rule: "OR('org3MSP.admin', 'org3MSP.client')"
        Admins:
            Type: Signature
            Rule: "OR('org3MSP.admin')"
        Endorsement:
            Type: Signature
            Rule: "OR('org3MSP.peer')"
    AnchorPeers:
        - Host: peer0.org3.com
          Port: 10051
          
Capabilities:
    Channel: &ChannelCapabilities
        V2_0: true
    Orderer: &OrdererCapabilities
        V2_0: true
    Application: &ApplicationCapabilities
        V2_0: true

Application: &ApplicationDefaults
    ACLs: &ACLsDefault
        # This section provides defaults for policies for various resources
        # in the system. These "resources" could be functions on system chaincodes
        # (e.g., "GetBlockByNumber" on the "qscc" system chaincode) or other resources
        # (e.g.,who can receive Block events). This section does NOT specify the resource's
        # definition or API, but just the ACL policy for it.
        #
        # User's can override these defaults with their own policy mapping by defining the
        # mapping under ACLs in their channel definition

        #---New Lifecycle System Chaincode (_lifecycle) function to policy mapping for access control--#

        # ACL policy for _lifecycle's "CommitChaincodeDefinition" function
        _lifecycle/CommitChaincodeDefinition: /Channel/Application/Writers

        # ACL policy for _lifecycle's "QueryChaincodeDefinition" function
        _lifecycle/QueryChaincodeDefinition: /Channel/Application/Readers

        # ACL policy for _lifecycle's "QueryNamespaceDefinitions" function
        _lifecycle/QueryNamespaceDefinitions: /Channel/Application/Readers

        #---Lifecycle System Chaincode (lscc) function to policy mapping for access control---#

        # ACL policy for lscc's "getid" function
        lscc/ChaincodeExists: /Channel/Application/Readers

        # ACL policy for lscc's "getdepspec" function
        lscc/GetDeploymentSpec: /Channel/Application/Readers

        # ACL policy for lscc's "getccdata" function
        lscc/GetChaincodeData: /Channel/Application/Readers

        # ACL Policy for lscc's "getchaincodes" function
        lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

        #---Query System Chaincode (qscc) function to policy mapping for access control---#

        # ACL policy for qscc's "GetChainInfo" function
        qscc/GetChainInfo: /Channel/Application/Readers

        # ACL policy for qscc's "GetBlockByNumber" function
        qscc/GetBlockByNumber: /Channel/Application/Readers

        # ACL policy for qscc's  "GetBlockByHash" function
        qscc/GetBlockByHash: /Channel/Application/Readers

        # ACL policy for qscc's "GetTransactionByID" function
        qscc/GetTransactionByID: /Channel/Application/Readers
        # qscc/GetTransactionByID: /Channel/Application/CustomPolicy

        # ACL policy for qscc's "GetBlockByTxID" function
        qscc/GetBlockByTxID: /Channel/Application/Readers

        #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

        # ACL policy for cscc's "GetConfigBlock" function
        cscc/GetConfigBlock: /Channel/Application/Readers

        # ACL policy for cscc's "GetConfigTree" function
        cscc/GetConfigTree: /Channel/Application/Readers

        # ACL policy for cscc's "SimulateConfigTreeUpdate" function
        cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

        #---Miscellanesous peer function to policy mapping for access control---#

        # ACL policy for invoking chaincodes on peer
        peer/Propose: /Channel/Application/Writers
        # peer/Propose: /Channel/Application/Restrict

        # ACL policy for chaincode to chaincode invocation
        peer/ChaincodeToChaincode: /Channel/Application/Readers

        #---Events resource to policy mapping for access control###---#

        # ACL policy for sending block events
        event/Block: /Channel/Application/Readers

        # ACL policy for sending filtered block events
        event/FilteredBlock: /Channel/Application/Readers

    Organizations:
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
        Endorsement:
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"
    Capabilities:
        <<: *ApplicationCapabilities
        
Orderer: &OrdererDefaults
    OrdererType: etcdraft
    BatchTimeout: 3s
    BatchSize:
        MaxMessageCount: 20
        AbsoluteMaxBytes: 99 MB
        PreferredMaxBytes: 512 KB
    Addresses:
        - orderer0.ordererorg.com:7051
    EtcdRaft:
        Consenters:
          - Host: orderer0.ordererorg.com
            Port: 7051
            ClientTLSCert: ../artifact/crypto-config/ordererOrganizations/ordererorg.com/orderers/orderer0.ordererorg.com/tls/server.crt
            ServerTLSCert: ../artifact/crypto-config/ordererOrganizations/ordererorg.com/orderers/orderer0.ordererorg.com/tls/server.crt
    Organizations:
    - *ordererorg
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

Channel: &ChannelDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
    Capabilities:
        <<: *ChannelCapabilities

Profiles:
    ThreeOrgsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *org1
                - *org2
                - *org3
            Capabilities:
                <<: *ApplicationCapabilities
    ThreeOrgsOrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft
            EtcdRaft:
                Consenters:
                - Host: orderer0.ordererorg.com
                  Port: 7051
                  ClientTLSCert: ../artifact/crypto-config/ordererOrganizations/ordererorg.com/orderers/orderer0.ordererorg.com/tls/server.crt
                  ServerTLSCert: ../artifact/crypto-config/ordererOrganizations/ordererorg.com/orderers/orderer0.ordererorg.com/tls/server.crt
                - Host: orderer1.ordererorg.com
                  Port: 7052
                  ClientTLSCert: ../artifact/crypto-config/ordererOrganizations/ordererorg.com/orderers/orderer1.ordererorg.com/tls/server.crt
                  ServerTLSCert: ../artifact/crypto-config/ordererOrganizations/ordererorg.com/orderers/orderer1.ordererorg.com/tls/server.crt
                - Host: orderer2.ordererorg.com
                  Port: 7053
                  ClientTLSCert: ../artifact/crypto-config/ordererOrganizations/ordererorg.com/orderers/orderer2.ordererorg.com/tls/server.crt
                  ServerTLSCert: ../artifact/crypto-config/ordererOrganizations/ordererorg.com/orderers/orderer2.ordererorg.com/tls/server.crt
            Addresses:
                - orderer0.ordererorg.com:7051
                - orderer1.ordererorg.com:7052
                - orderer2.ordererorg.com:7053
            Organizations:
                - *ordererorg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            SampleConsortium:
                Organizations:
                - *org1
                - *org2
                - *org3